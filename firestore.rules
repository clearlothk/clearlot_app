rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == "true");
    }
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Users collection - users can read/write their own data, admins can read all and update status/verification
    match /users/{userId} {
      // Users can read/write their own data OR admins can read all OR system can read for monitoring
      allow read: if (isAuthenticated() && request.auth.uid == userId) || isAdmin() || isAuthenticated();
      // Users can write their own data
      allow write: if isAuthenticated() && request.auth.uid == userId;
      // Users can create their own profile
      allow create: if isAuthenticated() && request.auth.uid == userId;
      // Admins can update specific fields (FIXED: added statusUpdatedAt and statusUpdatedBy)
      allow update: if isAdmin() && 
        (request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['status', 'verificationStatus', 'verificationReviewedAt', 'verificationReviewedBy', 'verificationNotes', 'isVerified', 'statusUpdatedAt', 'statusUpdatedBy']));
    }
    
    // Offers collection - public read, authenticated users can create/update their own offers
    match /offers/{offerId} {
      // Public read access OR admins can read all
      allow read: if true || isAdmin();
      // Authenticated users can create offers OR admins can create
      allow create: if isAuthenticated() || isAdmin();
      // Users can update/delete their own offers OR admins can update/delete OR system can update for restoration
      allow update: if (isAuthenticated() && resource.data.supplierId == request.auth.uid) || 
                    isAdmin() || 
                    (isAuthenticated() && request.resource.data.diff(resource.data).affectedKeys()
                      .hasOnly(['quantity', 'status', 'deleted', 'deletedAt', 'updatedAt']));
      // Users can delete their own offers OR admins can delete
      allow delete: if (isAuthenticated() && resource.data.supplierId == request.auth.uid) || isAdmin();
    }
    
    // Purchases collection - users can create purchases and read their own purchases
    match /purchases/{purchaseId} {
      // Users can read their own purchases OR admins can read all
      allow read: if (isAuthenticated() && (resource.data.buyerId == request.auth.uid || resource.data.sellerId == request.auth.uid)) || isAdmin();
      // Users can create purchases OR admins can create
      allow create: if isAuthenticated() || isAdmin();
      // Users can update their own purchases OR admins can update
      allow update: if (isAuthenticated() && (resource.data.buyerId == request.auth.uid || resource.data.sellerId == request.auth.uid)) || isAdmin();
    }
    
    // Transactions collection - users can read/write their own transactions
    match /transactions/{transactionId} {
      // Users can read/write their own transactions OR admins can read/write all
      allow read, write: if (isAuthenticated() && (resource.data.buyerId == request.auth.uid || resource.data.sellerId == request.auth.uid)) || isAdmin();
      // Users can create transactions OR admins can create
      allow create: if isAuthenticated() || isAdmin();
    }
    
    // Messages collection - users can read/write messages they're involved in
    match /messages/{messageId} {
      // Users can read/write messages they're involved in OR admins can read/write all
      allow read, write: if (isAuthenticated() && (resource.data.senderId == request.auth.uid || resource.data.receiverId == request.auth.uid)) || isAdmin();
      // Users can create messages OR admins can create
      allow create: if isAuthenticated() || isAdmin();
    }
    
    // Conversations collection - users can read/write conversations they're involved in
    match /conversations/{conversationId} {
      // Users can read/write conversations they're involved in OR admins can read/write all
      allow read, write: if (isAuthenticated() && resource.data.participants[request.auth.uid] == true) || isAdmin();
      // Users can create conversations OR admins can create
      allow create: if isAuthenticated() || isAdmin();
    }
    
    // Notifications collection - users can read/write their own notifications
    match /notifications/{notificationId} {
      // Users can read/write their own notifications OR admins can read/write all OR system can create for any user
      allow read, write: if (isAuthenticated() && resource.data.userId == request.auth.uid) || isAdmin();
      // Users can create notifications for themselves OR system can create for any user OR admins can create
      allow create: if (isAuthenticated() && request.resource.data.userId == request.auth.uid) || isAuthenticated() || isAdmin();
      // Allow list operations for notification history
      allow list: if isAuthenticated();
    }
    
    // Admin collection - only admin users can access
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }
  }
}